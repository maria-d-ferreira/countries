{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const useApiGet = url => {\n  _s();\n\n  // const [status, setStatus] = useState<Number>(0);\n  // const [statusText, setStatusText] = useState<String>(\"\");\n  const [data, setData] = useState(); // const [error, setError] = useState<any>();\n  // const [loading, setLoading] = useState<boolean>(false);\n\n  const fetchtData = async () => {\n    try {\n      //setLoading(true);\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (data) {\n        const countryData = data.map(info => {\n          const {\n            capital,\n            flags,\n            name,\n            region,\n            population,\n            launguages,\n            borders\n          } = info;\n          return {\n            capital,\n            flags,\n            name,\n            region,\n            population,\n            launguages,\n            borders,\n            favorite: false\n          };\n        });\n        setData(countryData);\n        console.log(\"contryData\");\n        console.log(typeof countryData); //const dataCopy = JSON.parse(JSON.stringify(countryData));\n      } // setStatus(response.status);\n      // setStatusText(response.statusText);\n\n    } catch (error) {// setError(error);\n    } //setLoading(false);\n\n  };\n\n  useEffect(() => {\n    fetchtData();\n  }, []); // return { status, statusText, data, error, loading };\n\n  return {\n    data\n  };\n};\n\n_s(useApiGet, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\nlength;","map":{"version":3,"names":["useState","useEffect","useApiGet","url","data","setData","fetchtData","response","fetch","json","countryData","map","info","capital","flags","name","region","population","launguages","borders","favorite","console","log","error","length"],"sources":["C:/Users/Cristina/Desktop/boiler/src/hooks/useApiHook.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport type TApiResponse = {\r\n  // status: Number;\r\n  // statusText: String;\r\n  data: [];\r\n  // error: any;\r\n  // loading: Boolean;\r\n};\r\n\r\nexport const useApiGet = (url: string): TApiResponse => {\r\n  // const [status, setStatus] = useState<Number>(0);\r\n  // const [statusText, setStatusText] = useState<String>(\"\");\r\n  const [data, setData] = useState<any>();\r\n  // const [error, setError] = useState<any>();\r\n  // const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const fetchtData = async () => {\r\n    try {\r\n      //setLoading(true);\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      if (data) {\r\n        const countryData = data.map((info: any) => {\r\n          const {\r\n            capital,\r\n            flags,\r\n            name,\r\n            region,\r\n            population,\r\n            launguages,\r\n            borders,\r\n          } = info;\r\n\r\n          return {\r\n            capital,\r\n            flags,\r\n            name,\r\n            region,\r\n            population,\r\n            launguages,\r\n            borders,\r\n            favorite: false,\r\n          };\r\n        });\r\n        setData(countryData);\r\n        console.log(\"contryData\");\r\n        console.log(typeof countryData);\r\n        //const dataCopy = JSON.parse(JSON.stringify(countryData));\r\n      }\r\n\r\n      // setStatus(response.status);\r\n      // setStatusText(response.statusText);\r\n    } catch (error) {\r\n      // setError(error);\r\n    }\r\n    //setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchtData();\r\n  }, []);\r\n\r\n  // return { status, statusText, data, error, loading };\r\n  return { data };\r\n};\r\nlength;\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAUA,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAA+B;EAAA;;EACtD;EACA;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC,CAHsD,CAItD;EACA;;EAEA,MAAMM,UAAU,GAAG,YAAY;IAC7B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;MACA,MAAMC,IAAI,GAAG,MAAMG,QAAQ,CAACE,IAAT,EAAnB;;MACA,IAAIL,IAAJ,EAAU;QACR,MAAMM,WAAW,GAAGN,IAAI,CAACO,GAAL,CAAUC,IAAD,IAAe;UAC1C,MAAM;YACJC,OADI;YAEJC,KAFI;YAGJC,IAHI;YAIJC,MAJI;YAKJC,UALI;YAMJC,UANI;YAOJC;UAPI,IAQFP,IARJ;UAUA,OAAO;YACLC,OADK;YAELC,KAFK;YAGLC,IAHK;YAILC,MAJK;YAKLC,UALK;YAMLC,UANK;YAOLC,OAPK;YAQLC,QAAQ,EAAE;UARL,CAAP;QAUD,CArBmB,CAApB;QAsBAf,OAAO,CAACK,WAAD,CAAP;QACAW,OAAO,CAACC,GAAR,CAAY,YAAZ;QACAD,OAAO,CAACC,GAAR,CAAY,OAAOZ,WAAnB,EAzBQ,CA0BR;MACD,CA/BC,CAiCF;MACA;;IACD,CAnCD,CAmCE,OAAOa,KAAP,EAAc,CACd;IACD,CAtC4B,CAuC7B;;EACD,CAxCD;;EA0CAtB,SAAS,CAAC,MAAM;IACdK,UAAU;EACX,CAFQ,EAEN,EAFM,CAAT,CAjDsD,CAqDtD;;EACA,OAAO;IAAEF;EAAF,CAAP;AACD,CAvDM;;GAAMF,S;;AAwDbsB,MAAM"},"metadata":{},"sourceType":"module"}