{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristina\\\\Documents\\\\GitHub\\\\countries\\\\src\\\\components\\\\Header.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Select from \"react-select\"; //import { useDispatch } from \"react-redux\";\n\nimport Countries from \"./Countries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: \"Africa\"\n}, {\n  value: \"Americas\"\n}, {\n  value: \"Asia\"\n}, {\n  value: \"Europe\"\n}, {\n  value: \"Oceania\"\n}];\n\nconst Header = () => {\n  _s();\n\n  const [selectedOption, setSelectedOption] = useState(null); // const dispatch = useDispatch();\n  // if (selectedOption) {\n  //   dispatch(setRegion(selectedOption.value));\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select a region ...\",\n        defaultMenuIsOpen: true,\n        options: options,\n        getOptionLabel: option => option.value,\n        onChange: setSelectedOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), !selectedOption && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + \"images/regions.png\",\n        alt: \"regions\",\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), selectedOption && /*#__PURE__*/_jsxDEV(Countries, {\n      region: selectedOption ? selectedOption.value : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Header, \"JA8CxE9ZrczvRffCFoauEAbBIYg=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["useState","Select","Countries","options","value","Header","selectedOption","setSelectedOption","option","process","env","PUBLIC_URL"],"sources":["C:/Users/Cristina/Documents/GitHub/countries/src/components/Header.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport Select from \"react-select\";\r\n//import { useDispatch } from \"react-redux\";\r\n\r\nimport { setRegion } from \"../store/regionSlice\";\r\nimport Countries from \"./Countries\";\r\n\r\nconst options = [\r\n  { value: \"Africa\" },\r\n  { value: \"Americas\" },\r\n  { value: \"Asia\" },\r\n  { value: \"Europe\" },\r\n  { value: \"Oceania\" },\r\n];\r\n\r\nconst Header = () => {\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  // const dispatch = useDispatch();\r\n  // if (selectedOption) {\r\n  //   dispatch(setRegion(selectedOption.value));\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <Select\r\n          placeholder={\"Select a region ...\"}\r\n          defaultMenuIsOpen={true}\r\n          options={options}\r\n          getOptionLabel={option => option.value}\r\n          onChange={setSelectedOption}\r\n        />\r\n      </section>\r\n\r\n      {!selectedOption && (\r\n        <section>\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"images/regions.png\"}\r\n            alt=\"regions\"\r\n            width=\"100%\"\r\n          />\r\n        </section>\r\n      )}\r\n      {selectedOption && (\r\n        <Countries region={selectedOption ? selectedOption.value : \"\"} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AAGA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE;AAAT,CADc,EAEd;EAAEA,KAAK,EAAE;AAAT,CAFc,EAGd;EAAEA,KAAK,EAAE;AAAT,CAHc,EAId;EAAEA,KAAK,EAAE;AAAT,CAJc,EAKd;EAAEA,KAAK,EAAE;AAAT,CALc,CAAhB;;AAQA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,IAAD,CAApD,CADmB,CAGnB;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE;MAAA,uBACE,QAAC,MAAD;QACE,WAAW,EAAE,qBADf;QAEE,iBAAiB,EAAE,IAFrB;QAGE,OAAO,EAAEG,OAHX;QAIE,cAAc,EAAEK,MAAM,IAAIA,MAAM,CAACJ,KAJnC;QAKE,QAAQ,EAAEG;MALZ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,EAWG,CAACD,cAAD,iBACC;MAAA,uBACE;QACE,GAAG,EAAEG,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,oBADhC;QAEE,GAAG,EAAC,SAFN;QAGE,KAAK,EAAC;MAHR;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZJ,EAoBGL,cAAc,iBACb,QAAC,SAAD;MAAW,MAAM,EAAEA,cAAc,GAAGA,cAAc,CAACF,KAAlB,GAA0B;IAA3D;MAAA;MAAA;MAAA;IAAA,QArBJ;EAAA,gBADF;AA0BD,CAlCD;;GAAMC,M;;KAAAA,M;AAoCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}