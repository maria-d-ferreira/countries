{"ast":null,"code":"import \"../css/Countries.css\"; // interface Props {\n//   region: string;\n// }\n// const Countries: React.FC<Props> = props => {\n//   const countries = store.getState().countries.countries;\n//   const countryList = countries.filter(\n//     country => country.region === props.region\n//   );\n//   const [name, setName] = useState(\"\");\n//   const [foundCountries, setFoundCountries] = useState(countryList);\n//   const filter = (e: React.FormEvent<HTMLInputElement>) => {\n//     const keyword = (e.target as HTMLInputElement).value;\n//     if (keyword !== \"\") {\n//       const results = countryList.filter(country => {\n//         return country.name.toLowerCase().startsWith(keyword.toLowerCase());\n//       });\n//       setFoundCountries(results);\n//     } else {\n//       setFoundCountries(countryList);\n//     }\n//     setName(keyword);\n//   };\n//   return (\n//     <section>\n//       <div className=\"container\">\n//         <input\n//           type=\"search\"\n//           value={name}\n//           onChange={filter}\n//           className=\"input\"\n//           placeholder=\"Search for a country\"\n//         />\n//         <div className=\"\"></div>\n//       </div>\n//       {\n//         <div>\n//           {foundCountries && foundCountries.length > 0 ? (\n//             foundCountries.map(country => (\n//               <li key={country.countryCode} className=\"countries-section\">\n//                 <Country country={country} fav=\"add\" />\n//               </li>\n//             ))\n//           ) : (\n//             <h1>No countries found!</h1>\n//           )}\n//         </div>\n//       }\n//     </section>\n//   );\n// };\n// export default Countries;","map":{"version":3,"names":[],"sources":["C:/Users/Cristina/Desktop/countries/src/components/Countries.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { store } from \"../store/store\";\r\nimport Country from \"./Country\";\r\nimport \"../css/Countries.css\";\r\n\r\n// interface Props {\r\n//   region: string;\r\n// }\r\n\r\n// const Countries: React.FC<Props> = props => {\r\n//   const countries = store.getState().countries.countries;\r\n\r\n//   const countryList = countries.filter(\r\n//     country => country.region === props.region\r\n//   );\r\n\r\n//   const [name, setName] = useState(\"\");\r\n//   const [foundCountries, setFoundCountries] = useState(countryList);\r\n\r\n//   const filter = (e: React.FormEvent<HTMLInputElement>) => {\r\n//     const keyword = (e.target as HTMLInputElement).value;\r\n\r\n//     if (keyword !== \"\") {\r\n//       const results = countryList.filter(country => {\r\n//         return country.name.toLowerCase().startsWith(keyword.toLowerCase());\r\n//       });\r\n//       setFoundCountries(results);\r\n//     } else {\r\n//       setFoundCountries(countryList);\r\n//     }\r\n//     setName(keyword);\r\n//   };\r\n\r\n//   return (\r\n//     <section>\r\n//       <div className=\"container\">\r\n//         <input\r\n//           type=\"search\"\r\n//           value={name}\r\n//           onChange={filter}\r\n//           className=\"input\"\r\n//           placeholder=\"Search for a country\"\r\n//         />\r\n\r\n//         <div className=\"\"></div>\r\n//       </div>\r\n\r\n//       {\r\n//         <div>\r\n//           {foundCountries && foundCountries.length > 0 ? (\r\n//             foundCountries.map(country => (\r\n//               <li key={country.countryCode} className=\"countries-section\">\r\n//                 <Country country={country} fav=\"add\" />\r\n//               </li>\r\n//             ))\r\n//           ) : (\r\n//             <h1>No countries found!</h1>\r\n//           )}\r\n//         </div>\r\n//       }\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default Countries;\r\n"],"mappings":"AAGA,OAAO,sBAAP,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}