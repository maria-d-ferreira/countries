{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const useHttp = url => {\n  _s();\n\n  const [countries, setCountries] = useState([]); // const [error, setError] = useState<any>();\n  // const [loading, setLoading] = useState<boolean>(false);\n\n  const fetchtData = async () => {\n    try {\n      //setLoading(true);\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (data) {\n        const countryData = data.map(info => {\n          const {\n            capital,\n            flags,\n            name,\n            region,\n            population,\n            launguages,\n            borders\n          } = info;\n          return {\n            capital,\n            flags,\n            name,\n            region,\n            population,\n            launguages,\n            borders,\n            favorite: false\n          };\n        });\n        setCountries(countryData);\n      }\n    } catch (error) {// setError(error);\n    } //setLoading(false);\n\n  };\n\n  useEffect(() => {\n    fetchtData();\n  }, []);\n  return {\n    countries\n  };\n};\n\n_s(useHttp, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");","map":{"version":3,"names":["useState","useEffect","useHttp","url","countries","setCountries","fetchtData","response","fetch","data","json","countryData","map","info","capital","flags","name","region","population","launguages","borders","favorite","error"],"sources":["C:/Users/Cristina/Desktop/boiler/src/hooks/useHttp.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport type Response = {\r\n  countries: [];\r\n  // error: any;\r\n  // loading: Boolean;\r\n};\r\n\r\nexport const useHttp = (url: string): Response => {\r\n  const [countries, setCountries] = useState<any>([]);\r\n  // const [error, setError] = useState<any>();\r\n  // const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const fetchtData = async () => {\r\n    try {\r\n      //setLoading(true);\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      if (data) {\r\n        const countryData = data.map((info: any) => {\r\n          const {\r\n            capital,\r\n            flags,\r\n            name,\r\n            region,\r\n            population,\r\n            launguages,\r\n            borders,\r\n          } = info;\r\n\r\n          return {\r\n            capital,\r\n            flags,\r\n            name,\r\n            region,\r\n            population,\r\n            launguages,\r\n            borders,\r\n            favorite: false,\r\n          };\r\n        });\r\n        setCountries(countryData);\r\n      }\r\n    } catch (error) {\r\n      // setError(error);\r\n    }\r\n    //setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchtData();\r\n  }, []);\r\n\r\n  return { countries };\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAQA,OAAO,MAAMC,OAAO,GAAIC,GAAD,IAA2B;EAAA;;EAChD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAM,EAAN,CAA1C,CADgD,CAEhD;EACA;;EAEA,MAAMM,UAAU,GAAG,YAAY;IAC7B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;MACA,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;MACA,IAAID,IAAJ,EAAU;QACR,MAAME,WAAW,GAAGF,IAAI,CAACG,GAAL,CAAUC,IAAD,IAAe;UAC1C,MAAM;YACJC,OADI;YAEJC,KAFI;YAGJC,IAHI;YAIJC,MAJI;YAKJC,UALI;YAMJC,UANI;YAOJC;UAPI,IAQFP,IARJ;UAUA,OAAO;YACLC,OADK;YAELC,KAFK;YAGLC,IAHK;YAILC,MAJK;YAKLC,UALK;YAMLC,UANK;YAOLC,OAPK;YAQLC,QAAQ,EAAE;UARL,CAAP;QAUD,CArBmB,CAApB;QAsBAhB,YAAY,CAACM,WAAD,CAAZ;MACD;IACF,CA7BD,CA6BE,OAAOW,KAAP,EAAc,CACd;IACD,CAhC4B,CAiC7B;;EACD,CAlCD;;EAoCArB,SAAS,CAAC,MAAM;IACdK,UAAU;EACX,CAFQ,EAEN,EAFM,CAAT;EAIA,OAAO;IAAEF;EAAF,CAAP;AACD,CA9CM;;GAAMF,O"},"metadata":{},"sourceType":"module"}