{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const dataFetch = createAsyncThunk(`store/dataFetch`, async () => {\n  const url = `https://rickandmortyapi.com/api/character`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n});\nconst initialState = {\n  meta: {\n    loading: false,\n    error: false,\n    message: ``\n  },\n  data: []\n};\nconst UserSlice = createSlice({\n  name: `JsonPlacehoder user`,\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(dataFetch.pending, state => ({ ...state,\n      meta: { ...state.meta,\n        loading: true\n      }\n    }));\n    builder.addCase(dataFetch.fulfilled, (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      return { ...state,\n        meta: { ...state.meta,\n          loading: false,\n          error: false,\n          message: ``\n        },\n        data: payload\n      };\n    });\n    builder.addCase(dataFetch.rejected, (state, _ref2) => {\n      let {\n        error\n      } = _ref2;\n      window.alert(error === null || error === void 0 ? void 0 : error.message);\n      return { ...state,\n        meta: {\n          loading: false,\n          error: true,\n          message: (error === null || error === void 0 ? void 0 : error.message) || ``\n        }\n      };\n    });\n  }\n});\nexport default UserSlice.reducer; // import { createSlice } from \"@reduxjs/toolkit\";\n// import { ICountry, CountryState, DispatchType } from \"../types\";\n// const initialState: CountryState = {\n//   countries: [],\n// };\n// export const countrySlice = createSlice({\n//   name: \"countries\",\n//   initialState,\n//   reducers: {\n//     getCountries: (state, action) => {\n//       return (state.countries = action.payload); // return?\n//     },\n//   },\n// });\n// export const { getCountries } = countrySlice.actions;\n// export default countrySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","dataFetch","url","response","fetch","data","json","initialState","meta","loading","error","message","UserSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","window","alert","reducer"],"sources":["C:/Users/Cristina/Desktop/boiler/src/store/countrySlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const dataFetch = createAsyncThunk(`store/dataFetch`, async () => {\r\n  const url = `https://rickandmortyapi.com/api/character`;\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  return data;\r\n});\r\n\r\ninterface Meta {\r\n  loading: boolean;\r\n  error: boolean;\r\n  message: string;\r\n}\r\n// This is where I am making mistake\r\ninterface Results {\r\n  name: string;\r\n  image: string;\r\n  gender: string;\r\n  species: string;\r\n  status: string;\r\n}\r\n\r\ninterface Info {\r\n  count: number;\r\n  pages: number;\r\n}\r\n\r\ninterface User {\r\n  results: Results[];\r\n  info: Info;\r\n}\r\n\r\nexport interface IUser {\r\n  meta: Meta;\r\n  data: User[];\r\n}\r\n\r\nconst initialState: IUser = {\r\n  meta: {\r\n    loading: false,\r\n    error: false,\r\n    message: ``,\r\n  },\r\n  data: [],\r\n};\r\n\r\nconst UserSlice = createSlice({\r\n  name: `JsonPlacehoder user`,\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    builder.addCase(dataFetch.pending, state => ({\r\n      ...state,\r\n      meta: {\r\n        ...state.meta,\r\n        loading: true,\r\n      },\r\n    }));\r\n    builder.addCase(dataFetch.fulfilled, (state, { payload }) => ({\r\n      ...state,\r\n      meta: {\r\n        ...state.meta,\r\n        loading: false,\r\n        error: false,\r\n        message: ``,\r\n      },\r\n      data: payload,\r\n    }));\r\n    builder.addCase(dataFetch.rejected, (state, { error }) => {\r\n      window.alert(error?.message);\r\n      return {\r\n        ...state,\r\n        meta: {\r\n          loading: false,\r\n          error: true,\r\n          message: error?.message || ``,\r\n        },\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport default UserSlice.reducer;\r\n\r\n// import { createSlice } from \"@reduxjs/toolkit\";\r\n// import { ICountry, CountryState, DispatchType } from \"../types\";\r\n\r\n// const initialState: CountryState = {\r\n//   countries: [],\r\n// };\r\n\r\n// export const countrySlice = createSlice({\r\n//   name: \"countries\",\r\n//   initialState,\r\n//   reducers: {\r\n//     getCountries: (state, action) => {\r\n//       return (state.countries = action.payload); // return?\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export const { getCountries } = countrySlice.actions;\r\n\r\n// export default countrySlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CAAE,iBAAF,EAAoB,YAAY;EACvE,MAAME,GAAG,GAAI,2CAAb;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;EACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;EACA,OAAOD,IAAP;AACD,CALwC,CAAlC;AAoCP,MAAME,YAAmB,GAAG;EAC1BC,IAAI,EAAE;IACJC,OAAO,EAAE,KADL;IAEJC,KAAK,EAAE,KAFH;IAGJC,OAAO,EAAG;EAHN,CADoB;EAM1BN,IAAI,EAAE;AANoB,CAA5B;AASA,MAAMO,SAAS,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAG,qBADqB;EAE5BN,YAF4B;EAG5BO,QAAQ,EAAE,EAHkB;EAI5BC,aAAa,EAAEC,OAAO,IAAI;IACxBA,OAAO,CAACC,OAAR,CAAgBhB,SAAS,CAACiB,OAA1B,EAAmCC,KAAK,KAAK,EAC3C,GAAGA,KADwC;MAE3CX,IAAI,EAAE,EACJ,GAAGW,KAAK,CAACX,IADL;QAEJC,OAAO,EAAE;MAFL;IAFqC,CAAL,CAAxC;IAOAO,OAAO,CAACC,OAAR,CAAgBhB,SAAS,CAACmB,SAA1B,EAAqC,CAACD,KAAD;MAAA,IAAQ;QAAEE;MAAF,CAAR;MAAA,OAAyB,EAC5D,GAAGF,KADyD;QAE5DX,IAAI,EAAE,EACJ,GAAGW,KAAK,CAACX,IADL;UAEJC,OAAO,EAAE,KAFL;UAGJC,KAAK,EAAE,KAHH;UAIJC,OAAO,EAAG;QAJN,CAFsD;QAQ5DN,IAAI,EAAEgB;MARsD,CAAzB;IAAA,CAArC;IAUAL,OAAO,CAACC,OAAR,CAAgBhB,SAAS,CAACqB,QAA1B,EAAoC,CAACH,KAAD,YAAsB;MAAA,IAAd;QAAET;MAAF,CAAc;MACxDa,MAAM,CAACC,KAAP,CAAad,KAAb,aAAaA,KAAb,uBAAaA,KAAK,CAAEC,OAApB;MACA,OAAO,EACL,GAAGQ,KADE;QAELX,IAAI,EAAE;UACJC,OAAO,EAAE,KADL;UAEJC,KAAK,EAAE,IAFH;UAGJC,OAAO,EAAE,CAAAD,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,OAAP,KAAmB;QAHxB;MAFD,CAAP;IAQD,CAVD;EAWD;AAjC2B,CAAD,CAA7B;AAoCA,eAAeC,SAAS,CAACa,OAAzB,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA"},"metadata":{},"sourceType":"module"}