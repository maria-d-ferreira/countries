{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nexport const useHttp = url => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (data) {\n        const countryData = data.map(info => {\n          const {\n            capital,\n            flags,\n            name,\n            region,\n            population,\n            launguages,\n            borders\n          } = info;\n          return {\n            capital,\n            flags,\n            name,\n            region,\n            population,\n            launguages,\n            borders,\n            favorite: false\n          };\n        });\n        setCountries(countryData);\n      } else {\n        setCountries([]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]); // return { status, statusText, data, error, loading };\n\n  return {\n    countries,\n    loading\n  };\n};\n\n_s(useHttp, \"QMgTINWY9oInLdLjTFU8hWHLLhg=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useHttp","url","countries","setCountries","loading","setLoading","fetchData","response","fetch","data","json","countryData","map","info","capital","flags","name","region","population","launguages","borders","favorite","error","console","log"],"sources":["C:/Users/Cristina/Desktop/boiler/src/hooks/useHttp.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\n\r\nexport type TResponse = {\r\n  countries: [];\r\n  loading: Boolean;\r\n};\r\n\r\nexport const useHttp = (url: string): TResponse => {\r\n  const [countries, setCountries] = useState<any>([]);\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      if (data) {\r\n        const countryData = data.map((info: any) => {\r\n          const {\r\n            capital,\r\n            flags,\r\n            name,\r\n            region,\r\n            population,\r\n            launguages,\r\n            borders,\r\n          } = info;\r\n\r\n          return {\r\n            capital,\r\n            flags,\r\n            name,\r\n            region,\r\n            population,\r\n            launguages,\r\n            borders,\r\n            favorite: false,\r\n          };\r\n        });\r\n        setCountries(countryData);\r\n      } else {\r\n        setCountries([]);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  // return { status, statusText, data, error, loading };\r\n  return { countries, loading };\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AAOA,OAAO,MAAMC,OAAO,GAAIC,GAAD,IAA4B;EAAA;;EACjD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAM,EAAN,CAA1C;EAEA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAU,KAAV,CAAtC;EAEA,MAAMS,SAAS,GAAGP,WAAW,CAAC,YAAY;IACxC,IAAI;MACFM,UAAU,CAAC,IAAD,CAAV;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,CAA5B;MACA,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;MACA,IAAID,IAAJ,EAAU;QACR,MAAME,WAAW,GAAGF,IAAI,CAACG,GAAL,CAAUC,IAAD,IAAe;UAC1C,MAAM;YACJC,OADI;YAEJC,KAFI;YAGJC,IAHI;YAIJC,MAJI;YAKJC,UALI;YAMJC,UANI;YAOJC;UAPI,IAQFP,IARJ;UAUA,OAAO;YACLC,OADK;YAELC,KAFK;YAGLC,IAHK;YAILC,MAJK;YAKLC,UALK;YAMLC,UANK;YAOLC,OAPK;YAQLC,QAAQ,EAAE;UARL,CAAP;QAUD,CArBmB,CAApB;QAsBAlB,YAAY,CAACQ,WAAD,CAAZ;MACD,CAxBD,MAwBO;QACLR,YAAY,CAAC,EAAD,CAAZ;MACD;;MACDE,UAAU,CAAC,KAAD,CAAV;IACD,CAhCD,CAgCE,OAAOiB,KAAP,EAAc;MACdjB,UAAU,CAAC,KAAD,CAAV;MACAkB,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CArC4B,EAqC1B,EArC0B,CAA7B;EAuCAxB,SAAS,CAAC,MAAM;IACdQ,SAAS;EACV,CAFQ,EAEN,CAACA,SAAD,CAFM,CAAT,CA5CiD,CAgDjD;;EACA,OAAO;IAAEJ,SAAF;IAAaE;EAAb,CAAP;AACD,CAlDM;;GAAMJ,O"},"metadata":{},"sourceType":"module"}