{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const useApiGet = url => {\n  _s();\n\n  const [status, setStatus] = useState(0);\n  const [statusText, setStatusText] = useState(\"\");\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const fethtData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(url);\n      const data = await response.json();\n      const countryData = data.map(info => {\n        const {\n          capital,\n          flags,\n          name,\n          region,\n          population,\n          launguages,\n          borders\n        } = info;\n      });\n      setStatus(response.status);\n      setStatusText(response.statusText);\n      setData(countryData);\n    } catch (error) {\n      setError(error);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fethtData();\n  }, []);\n  return {\n    status,\n    statusText,\n    data,\n    error,\n    loading\n  };\n};\n\n_s(useApiGet, \"GIDrwDjs3qTQ55jp79O9NdWKGj8=\");","map":{"version":3,"names":["useState","useEffect","useApiGet","url","status","setStatus","statusText","setStatusText","data","setData","error","setError","loading","setLoading","fethtData","response","fetch","json","countryData","map","info","capital","flags","name","region","population","launguages","borders"],"sources":["C:/Users/Cristina/Desktop/boiler/src/hooks/useApiHook.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport type TApiResponse = {\r\n  status: Number;\r\n  statusText: String;\r\n  data: any;\r\n  error: any;\r\n  loading: Boolean;\r\n};\r\n\r\nexport const useApiGet = (url: string): TApiResponse => {\r\n  const [status, setStatus] = useState<Number>(0);\r\n  const [statusText, setStatusText] = useState<String>(\"\");\r\n  const [data, setData] = useState<any>();\r\n  const [error, setError] = useState<any>();\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const fethtData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      const countryData = data.map((info: any) => {\r\n        const {\r\n          capital,\r\n          flags,\r\n          name,\r\n          region,\r\n          population,\r\n          launguages,\r\n          borders,\r\n        } = info;\r\n      });\r\n\r\n      setStatus(response.status);\r\n      setStatusText(response.statusText);\r\n      setData(countryData);\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fethtData();\r\n  }, []);\r\n\r\n  return { status, statusText, data, error, loading };\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAUA,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAA+B;EAAA;;EACtD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAS,CAAT,CAApC;EACA,MAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAS,EAAT,CAA5C;EACA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAU,KAAV,CAAtC;;EAEA,MAAMc,SAAS,GAAG,YAAY;IAC5B,IAAI;MACFD,UAAU,CAAC,IAAD,CAAV;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACb,GAAD,CAA5B;MACA,MAAMK,IAAI,GAAG,MAAMO,QAAQ,CAACE,IAAT,EAAnB;MAEA,MAAMC,WAAW,GAAGV,IAAI,CAACW,GAAL,CAAUC,IAAD,IAAe;QAC1C,MAAM;UACJC,OADI;UAEJC,KAFI;UAGJC,IAHI;UAIJC,MAJI;UAKJC,UALI;UAMJC,UANI;UAOJC;QAPI,IAQFP,IARJ;MASD,CAVmB,CAApB;MAYAf,SAAS,CAACU,QAAQ,CAACX,MAAV,CAAT;MACAG,aAAa,CAACQ,QAAQ,CAACT,UAAV,CAAb;MACAG,OAAO,CAACS,WAAD,CAAP;IACD,CApBD,CAoBE,OAAOR,KAAP,EAAc;MACdC,QAAQ,CAACD,KAAD,CAAR;IACD;;IACDG,UAAU,CAAC,KAAD,CAAV;EACD,CAzBD;;EA2BAZ,SAAS,CAAC,MAAM;IACda,SAAS;EACV,CAFQ,EAEN,EAFM,CAAT;EAIA,OAAO;IAAEV,MAAF;IAAUE,UAAV;IAAsBE,IAAtB;IAA4BE,KAA5B;IAAmCE;EAAnC,CAAP;AACD,CAvCM;;GAAMV,S"},"metadata":{},"sourceType":"module"}