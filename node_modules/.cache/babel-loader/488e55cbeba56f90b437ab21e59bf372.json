{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const useApiGet = url => {\n  _s();\n\n  const [status, setStatus] = useState(0);\n  const [statusText, setStatusText] = useState(\"\");\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const getAPIData = async () => {\n    setLoading(true);\n\n    try {\n      const apiResponse = await fetch(url);\n      const json = await apiResponse.json();\n      setStatus(apiResponse.status);\n      setStatusText(apiResponse.statusText);\n      setData(json);\n    } catch (error) {\n      setError(error);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getAPIData();\n  }, []);\n  return {\n    status,\n    statusText,\n    data,\n    error,\n    loading\n  };\n};\n\n_s(useApiGet, \"GIDrwDjs3qTQ55jp79O9NdWKGj8=\");","map":{"version":3,"names":["useState","useEffect","useApiGet","url","status","setStatus","statusText","setStatusText","data","setData","error","setError","loading","setLoading","getAPIData","apiResponse","fetch","json"],"sources":["C:/Users/Cristina/Desktop/boiler/src/hooks/useApiHook.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport type TApiResponse = {\r\n  status: Number;\r\n  statusText: String;\r\n  data: any;\r\n  error: any;\r\n  loading: Boolean;\r\n};\r\n\r\nexport const useApiGet = (url: string): TApiResponse => {\r\n  const [status, setStatus] = useState<Number>(0);\r\n  const [statusText, setStatusText] = useState<String>(\"\");\r\n  const [data, setData] = useState<any>();\r\n  const [error, setError] = useState<any>();\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const getAPIData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const apiResponse = await fetch(url);\r\n      const json = await apiResponse.json();\r\n      setStatus(apiResponse.status);\r\n      setStatusText(apiResponse.statusText);\r\n      setData(json);\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAPIData();\r\n  }, []);\r\n\r\n  return { status, statusText, data, error, loading };\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAUA,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAA+B;EAAA;;EACtD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAS,CAAT,CAApC;EACA,MAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAS,EAAT,CAA5C;EACA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAU,KAAV,CAAtC;;EAEA,MAAMc,UAAU,GAAG,YAAY;IAC7BD,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACF,MAAME,WAAW,GAAG,MAAMC,KAAK,CAACb,GAAD,CAA/B;MACA,MAAMc,IAAI,GAAG,MAAMF,WAAW,CAACE,IAAZ,EAAnB;MACAZ,SAAS,CAACU,WAAW,CAACX,MAAb,CAAT;MACAG,aAAa,CAACQ,WAAW,CAACT,UAAb,CAAb;MACAG,OAAO,CAACQ,IAAD,CAAP;IACD,CAND,CAME,OAAOP,KAAP,EAAc;MACdC,QAAQ,CAACD,KAAD,CAAR;IACD;;IACDG,UAAU,CAAC,KAAD,CAAV;EACD,CAZD;;EAcAZ,SAAS,CAAC,MAAM;IACda,UAAU;EACX,CAFQ,EAEN,EAFM,CAAT;EAIA,OAAO;IAAEV,MAAF;IAAUE,UAAV;IAAsBE,IAAtB;IAA4BE,KAA5B;IAAmCE;EAAnC,CAAP;AACD,CA1BM;;GAAMV,S"},"metadata":{},"sourceType":"module"}