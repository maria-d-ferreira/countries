{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristina\\\\Desktop\\\\countries\\\\src\\\\components\\\\Header.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport { useDispatch } from \"react-redux\";\nimport Countries from \"./Countries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst regions = [\"africa\", \"americas\", \"asia\", \"europe\", \"oceania\"];\nconst options = [{\n  value: \"africa\",\n  label: \"Africa\"\n}, {\n  value: \"americas\",\n  label: \"Americas\"\n}, {\n  value: \"asia\",\n  label: \"Asia\"\n}, {\n  value: \"europe\",\n  label: \"Europe\"\n}, {\n  value: \"oceania\",\n  label: \"Oceania\"\n}];\n\nconst Header = () => {\n  _s();\n\n  const [selectedOption, setSelectedOption] = useState(null);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select a region ...\",\n        defaultMenuIsOpen: true,\n        options: options,\n        onChange: setSelectedOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), !selectedOption && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + \"images/regions.png\",\n        alt: \"regions\",\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), selectedOption && /*#__PURE__*/_jsxDEV(Countries, {\n      region: selectedOption.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Header, \"wudAzoMXBIOzGqPJ1th08WQoEqc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Header;\nexport default Header;\n{\n  /* <Countries region={dispatch(getSelectedRegion(selectedOption.label))} /> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","Select","useDispatch","Countries","regions","options","value","label","Header","selectedOption","setSelectedOption","dispatch","process","env","PUBLIC_URL"],"sources":["C:/Users/Cristina/Desktop/countries/src/components/Header.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport Countries from \"./Countries\";\r\n\r\nconst regions = [\"africa\", \"americas\", \"asia\", \"europe\", \"oceania\"];\r\nconst options = [\r\n  { value: \"africa\", label: \"Africa\" },\r\n  { value: \"americas\", label: \"Americas\" },\r\n  { value: \"asia\", label: \"Asia\" },\r\n  { value: \"europe\", label: \"Europe\" },\r\n  { value: \"oceania\", label: \"Oceania\" },\r\n];\r\n\r\nconst Header = () => {\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <Select\r\n          placeholder={\"Select a region ...\"}\r\n          defaultMenuIsOpen={true}\r\n          options={options}\r\n          onChange={setSelectedOption}\r\n        />\r\n      </section>\r\n\r\n      {!selectedOption && (\r\n        <section>\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"images/regions.png\"}\r\n            alt=\"regions\"\r\n            width=\"100%\"\r\n          />\r\n        </section>\r\n      )}\r\n      {selectedOption && <Countries region={selectedOption.label} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\n{\r\n  /* <Countries region={dispatch(getSelectedRegion(selectedOption.label))} /> */\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,OAAO,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA+B,QAA/B,EAAyC,SAAzC,CAAhB;AACA,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,QAAT;EAAmBC,KAAK,EAAE;AAA1B,CADc,EAEd;EAAED,KAAK,EAAE,UAAT;EAAqBC,KAAK,EAAE;AAA5B,CAFc,EAGd;EAAED,KAAK,EAAE,MAAT;EAAiBC,KAAK,EAAE;AAAxB,CAHc,EAId;EAAED,KAAK,EAAE,QAAT;EAAmBC,KAAK,EAAE;AAA1B,CAJc,EAKd;EAAED,KAAK,EAAE,SAAT;EAAoBC,KAAK,EAAE;AAA3B,CALc,CAAhB;;AAQA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,IAAD,CAApD;EAEA,MAAMW,QAAQ,GAAGT,WAAW,EAA5B;EAEA,oBACE;IAAA,wBACE;MAAA,uBACE,QAAC,MAAD;QACE,WAAW,EAAE,qBADf;QAEE,iBAAiB,EAAE,IAFrB;QAGE,OAAO,EAAEG,OAHX;QAIE,QAAQ,EAAEK;MAJZ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,EAUG,CAACD,cAAD,iBACC;MAAA,uBACE;QACE,GAAG,EAAEG,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,oBADhC;QAEE,GAAG,EAAC,SAFN;QAGE,KAAK,EAAC;MAHR;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAXJ,EAmBGL,cAAc,iBAAI,QAAC,SAAD;MAAW,MAAM,EAAEA,cAAc,CAACF;IAAlC;MAAA;MAAA;MAAA;IAAA,QAnBrB;EAAA,gBADF;AAuBD,CA5BD;;GAAMC,M;UAGaN,W;;;KAHbM,M;AA8BN,eAAeA,MAAf;AAEA;EACE;AACD"},"metadata":{},"sourceType":"module"}