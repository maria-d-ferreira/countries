{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristina\\\\Desktop\\\\countries\\\\src\\\\components\\\\Header.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Select from \"react-select\";\nimport Countries from \"./Countries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: \"Africa\"\n}, {\n  value: \"Americas\"\n}, {\n  value: \"Asia\"\n}, {\n  value: \"Europe\"\n}, {\n  value: \"Oceania\"\n}];\n\nconst Header = () => {\n  _s();\n\n  const [selectedOption, setSelectedOption] = useState(null);\n  let openMenu = false;\n\n  const handleFocus = () => {\n    openMenu = true;\n    console.log(\"true\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select a region ...\",\n        defaultMenuIsOpen: true,\n        options: options,\n        getOptionLabel: option => option.value,\n        onChange: setSelectedOption,\n        onMenuOpen: handleFocus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), !selectedOption && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + \"images/regions.png\",\n        alt: \"regions\",\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), selectedOption && /*#__PURE__*/_jsxDEV(Countries, {\n      region: selectedOption ? selectedOption.value : \"\",\n      openMenu: openMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Header, \"JA8CxE9ZrczvRffCFoauEAbBIYg=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["useState","Select","Countries","options","value","Header","selectedOption","setSelectedOption","openMenu","handleFocus","console","log","option","process","env","PUBLIC_URL"],"sources":["C:/Users/Cristina/Desktop/countries/src/components/Header.tsx"],"sourcesContent":["import { useState, createRef } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nimport Countries from \"./Countries\";\r\n\r\nconst options = [\r\n  { value: \"Africa\" },\r\n  { value: \"Americas\" },\r\n  { value: \"Asia\" },\r\n  { value: \"Europe\" },\r\n  { value: \"Oceania\" },\r\n];\r\n\r\nconst Header = () => {\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  let openMenu = false;\r\n  const handleFocus = () => {\r\n    openMenu = true;\r\n    console.log(\"true\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <Select\r\n          placeholder={\"Select a region ...\"}\r\n          defaultMenuIsOpen={true}\r\n          options={options}\r\n          getOptionLabel={option => option.value}\r\n          onChange={setSelectedOption}\r\n          onMenuOpen={handleFocus}\r\n        />\r\n      </section>\r\n\r\n      {!selectedOption && (\r\n        <section>\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"images/regions.png\"}\r\n            alt=\"regions\"\r\n            width=\"100%\"\r\n          />\r\n        </section>\r\n      )}\r\n      {selectedOption && (\r\n        <Countries\r\n          region={selectedOption ? selectedOption.value : \"\"}\r\n          openMenu={openMenu}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE;AAAT,CADc,EAEd;EAAEA,KAAK,EAAE;AAAT,CAFc,EAGd;EAAEA,KAAK,EAAE;AAAT,CAHc,EAId;EAAEA,KAAK,EAAE;AAAT,CAJc,EAKd;EAAEA,KAAK,EAAE;AAAT,CALc,CAAhB;;AAQA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,IAAD,CAApD;EAEA,IAAIQ,QAAQ,GAAG,KAAf;;EACA,MAAMC,WAAW,GAAG,MAAM;IACxBD,QAAQ,GAAG,IAAX;IACAE,OAAO,CAACC,GAAR,CAAY,MAAZ;EACD,CAHD;;EAKA,oBACE;IAAA,wBACE;MAAA,uBACE,QAAC,MAAD;QACE,WAAW,EAAE,qBADf;QAEE,iBAAiB,EAAE,IAFrB;QAGE,OAAO,EAAER,OAHX;QAIE,cAAc,EAAES,MAAM,IAAIA,MAAM,CAACR,KAJnC;QAKE,QAAQ,EAAEG,iBALZ;QAME,UAAU,EAAEE;MANd;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,EAYG,CAACH,cAAD,iBACC;MAAA,uBACE;QACE,GAAG,EAAEO,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,oBADhC;QAEE,GAAG,EAAC,SAFN;QAGE,KAAK,EAAC;MAHR;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAbJ,EAqBGT,cAAc,iBACb,QAAC,SAAD;MACE,MAAM,EAAEA,cAAc,GAAGA,cAAc,CAACF,KAAlB,GAA0B,EADlD;MAEE,QAAQ,EAAEI;IAFZ;MAAA;MAAA;MAAA;IAAA,QAtBJ;EAAA,gBADF;AA8BD,CAvCD;;GAAMH,M;;KAAAA,M;AAyCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}