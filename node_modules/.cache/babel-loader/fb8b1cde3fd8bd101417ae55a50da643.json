{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  favorites: []\n}; //...\n\nvar storedNames = JSON.parse(localStorage.getItem(\"names\"));\nexport const favoriteSlice = createSlice({\n  name: \"favorites\",\n  initialState,\n  reducers: {\n    addFav: (state, action) => {\n      const newFav = action.payload;\n      const existingFav = state.favorites.find(fav => fav.countryCode === newFav.countryCode);\n\n      if (!existingFav) {\n        state.favorites.push(action.payload);\n        localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n      }\n    },\n    removeFav: (state, action) => {\n      const countryCode = action.payload;\n      state.favorites = state.favorites.filter(favorite => favorite.countryCode !== countryCode);\n    }\n  }\n});\nexport const {\n  addFav,\n  removeFav\n} = favoriteSlice.actions;\nexport default favoriteSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","favorites","storedNames","JSON","parse","localStorage","getItem","favoriteSlice","name","reducers","addFav","state","action","newFav","payload","existingFav","find","fav","countryCode","push","setItem","stringify","removeFav","filter","favorite","actions","reducer"],"sources":["C:/Users/Cristina/Desktop/countries/src/store/favoriteSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { FavoriteState } from \"../types\";\r\n\r\nconst initialState: FavoriteState = {\r\n  favorites: [],\r\n};\r\n\r\n//...\r\nvar storedNames = JSON.parse(localStorage.getItem(\"names\"));\r\nexport const favoriteSlice = createSlice({\r\n  name: \"favorites\",\r\n  initialState,\r\n  reducers: {\r\n    addFav: (state, action) => {\r\n      const newFav = action.payload;\r\n      const existingFav = state.favorites.find(\r\n        fav => fav.countryCode === newFav.countryCode\r\n      );\r\n      if (!existingFav) {\r\n        state.favorites.push(action.payload);\r\n        localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\r\n      }\r\n    },\r\n    removeFav: (state, action) => {\r\n      const countryCode = action.payload;\r\n      state.favorites = state.favorites.filter(\r\n        favorite => favorite.countryCode !== countryCode\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addFav, removeFav } = favoriteSlice.actions;\r\n\r\nexport default favoriteSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,YAA2B,GAAG;EAClCC,SAAS,EAAE;AADuB,CAApC,C,CAIA;;AACA,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAlB;AACA,OAAO,MAAMC,aAAa,GAAGR,WAAW,CAAC;EACvCS,IAAI,EAAE,WADiC;EAEvCR,YAFuC;EAGvCS,QAAQ,EAAE;IACRC,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACzB,MAAMC,MAAM,GAAGD,MAAM,CAACE,OAAtB;MACA,MAAMC,WAAW,GAAGJ,KAAK,CAACV,SAAN,CAAgBe,IAAhB,CAClBC,GAAG,IAAIA,GAAG,CAACC,WAAJ,KAAoBL,MAAM,CAACK,WADhB,CAApB;;MAGA,IAAI,CAACH,WAAL,EAAkB;QAChBJ,KAAK,CAACV,SAAN,CAAgBkB,IAAhB,CAAqBP,MAAM,CAACE,OAA5B;QACAT,YAAY,CAACe,OAAb,CAAqB,WAArB,EAAkCjB,IAAI,CAACkB,SAAL,CAAeV,KAAK,CAACV,SAArB,CAAlC;MACD;IACF,CAVO;IAWRqB,SAAS,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;MAC5B,MAAMM,WAAW,GAAGN,MAAM,CAACE,OAA3B;MACAH,KAAK,CAACV,SAAN,GAAkBU,KAAK,CAACV,SAAN,CAAgBsB,MAAhB,CAChBC,QAAQ,IAAIA,QAAQ,CAACN,WAAT,KAAyBA,WADrB,CAAlB;IAGD;EAhBO;AAH6B,CAAD,CAAjC;AAuBP,OAAO,MAAM;EAAER,MAAF;EAAUY;AAAV,IAAwBf,aAAa,CAACkB,OAA5C;AAEP,eAAelB,aAAa,CAACmB,OAA7B"},"metadata":{},"sourceType":"module"}