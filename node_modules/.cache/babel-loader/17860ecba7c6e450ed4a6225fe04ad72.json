{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristina\\\\Desktop\\\\countries\\\\src\\\\components\\\\Countries.tsx\";\nimport { store } from \"../store/store\";\nimport FilteredCountries from \"../components/FilteredCountries\";\nimport \"../css/Countries.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = props => {\n  const countries = countries.countries.filter(country => country.region === props.region);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(FilteredCountries, {\n      countries: store.getState().countries.countries.filter(country => country.region === props.region),\n      fav: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Countries;\nexport default Countries;\n{\n  /* <section>\r\n  <div className=\"container\">\r\n  <input\r\n    type=\"search\"\r\n    value={name}\r\n    onChange={filter}\r\n    className=\"input\"\r\n    placeholder=\"Search for a country\"\r\n  />\r\n    <div className=\"\"></div>\r\n  </div>\r\n  {\r\n  <div>\r\n    {countries && countries.length > 0 ? (\r\n      countries\r\n        .filter(country => country.region === props.region)\r\n        .filter(country => {\r\n          return (\r\n            name === \"\" ||\r\n            country.name.toLowerCase().startsWith(name.toLowerCase())\r\n          );\r\n        })\r\n        .map(country => (\r\n          <li key={country.countryCode} className=\"countries-section\">\r\n            <Country country={country} fav=\"add\" />\r\n          </li>\r\n        ))\r\n    ) : (\r\n      <h1>No countries found!</h1>\r\n    )}\r\n  </div>\r\n  }\r\n  </section> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["store","FilteredCountries","Countries","props","countries","filter","country","region","getState"],"sources":["C:/Users/Cristina/Desktop/countries/src/components/Countries.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { store } from \"../store/store\";\r\n\r\nimport FilteredCountries from \"../components/FilteredCountries\";\r\n\r\nimport \"../css/Countries.css\";\r\n\r\ninterface Props {\r\n  region: string;\r\n}\r\n\r\nconst Countries: React.FC<Props> = props => {\r\n  const countries = countries.countries.filter(\r\n    country => country.region === props.region\r\n  );\r\n\r\n  return (\r\n    <section>\r\n      <FilteredCountries\r\n        countries={store\r\n          .getState()\r\n          .countries.countries.filter(\r\n            country => country.region === props.region\r\n          )}\r\n        fav=\"add\"\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n\r\n{\r\n  /* <section>\r\n<div className=\"container\">\r\n  <input\r\n    type=\"search\"\r\n    value={name}\r\n    onChange={filter}\r\n    className=\"input\"\r\n    placeholder=\"Search for a country\"\r\n  />\r\n\r\n  <div className=\"\"></div>\r\n</div>\r\n\r\n{\r\n  <div>\r\n    {countries && countries.length > 0 ? (\r\n      countries\r\n        .filter(country => country.region === props.region)\r\n        .filter(country => {\r\n          return (\r\n            name === \"\" ||\r\n            country.name.toLowerCase().startsWith(name.toLowerCase())\r\n          );\r\n        })\r\n        .map(country => (\r\n          <li key={country.countryCode} className=\"countries-section\">\r\n            <Country country={country} fav=\"add\" />\r\n          </li>\r\n        ))\r\n    ) : (\r\n      <h1>No countries found!</h1>\r\n    )}\r\n  </div>\r\n}\r\n</section> */\r\n}\r\n"],"mappings":";AACA,SAASA,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,OAAO,sBAAP;;;AAMA,MAAMC,SAA0B,GAAGC,KAAK,IAAI;EAC1C,MAAMC,SAAS,GAAGA,SAAS,CAACA,SAAV,CAAoBC,MAApB,CAChBC,OAAO,IAAIA,OAAO,CAACC,MAAR,KAAmBJ,KAAK,CAACI,MADpB,CAAlB;EAIA,oBACE;IAAA,uBACE,QAAC,iBAAD;MACE,SAAS,EAAEP,KAAK,CACbQ,QADQ,GAERJ,SAFQ,CAEEA,SAFF,CAEYC,MAFZ,CAGPC,OAAO,IAAIA,OAAO,CAACC,MAAR,KAAmBJ,KAAK,CAACI,MAH7B,CADb;MAME,GAAG,EAAC;IANN;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAjBD;;KAAML,S;AAmBN,eAAeA,SAAf;AAEA;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC"},"metadata":{},"sourceType":"module"}